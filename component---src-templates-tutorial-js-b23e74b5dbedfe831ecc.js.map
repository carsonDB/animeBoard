{"version":3,"sources":["webpack:///./src/components/sidebar.tsx","webpack:///./src/templates/tutorial.js"],"names":["StyledSidebar","styled","div","Sidebar","t","useTranslation","Nav","className","Item","Link","as","to","StyledContainer","StyledContent","Template","markdownRemark","data","frontmatter","html","title","style","marginTop","dangerouslySetInnerHTML","__html"],"mappings":"qNAMMA,EAAgBC,IAAOC,IAAV,yEAAGD,CAAH,mCAIJ,SAASE,IAAU,IACtBC,EAAMC,2BAAND,EAER,OAAO,kBAACJ,EAAD,KACH,kBAACM,EAAA,EAAD,CAAKC,UAAU,gDACX,kBAACD,EAAA,EAAIE,KAAL,KACI,kBAACF,EAAA,EAAIG,KAAL,CAAUC,GAAID,OAAME,GAAG,2BAA2BP,EAAE,iBACpD,kBAACE,EAAA,EAAIG,KAAL,CAAUC,GAAID,OAAME,GAAG,6BAA6BP,EAAE,mBACtD,kBAACE,EAAA,EAAIG,KAAL,CAAUC,GAAID,OAAME,GAAG,8BAA8BP,EAAE,mBACvD,kBAACE,EAAA,EAAIG,KAAL,CAAUC,GAAID,OAAME,GAAG,0BAA0BP,EAAE,gBACnD,kBAACE,EAAA,EAAIG,KAAL,CAAUC,GAAID,OAAME,GAAG,4BAA4BP,EAAE,gBACrD,kBAACE,EAAA,EAAIG,KAAL,CAAUC,GAAID,OAAME,GAAG,8BAA8BP,EAAE,mBCfvE,IAAMQ,EAAkBX,IAAOC,IAAV,gFAAGD,CAAH,kLAQfY,EAAgBZ,IAAOC,IAAV,8EAAGD,CAAH,0NAwBJ,SAASa,EAAT,GAA6B,IAChCC,EAD+B,EAARC,KACvBD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAErB,OAAO,kBAACN,EAAD,KACH,kBAAC,IAAD,MACA,kBAACT,EAAD,MACA,kBAACU,EAAD,KACI,4BAAKI,EAAYE,OACjB,yBAAKC,MAAO,CAACC,UAAW,OAAQC,wBAAyB,CAAEC,OAAQL","file":"component---src-templates-tutorial-js-b23e74b5dbedfe831ecc.js","sourcesContent":["import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { Link, useTranslation } from 'gatsby-plugin-react-i18next'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst StyledSidebar = styled.div`\r\n    grid-area: sidebar;\r\n    width: 20vw;\r\n`\r\nexport default function Sidebar() {\r\n    const { t } = useTranslation()\r\n\r\n    return <StyledSidebar>\r\n        <Nav className=\"col-md-12 d-none d-md-block bg-light sidebar\" >\r\n            <Nav.Item>\r\n                <Nav.Link as={Link} to=\"/tutorial/quick-started\">{t('quickStarted')}</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/tutorial/write-narration\">{t('writeNarration')}</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/tutorial/elements-keyword\">{t('elementKeyword')}</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/tutorial/monitor-edit\">{t('monitorEdit')}</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/tutorial/make-animation\">{t('makeAnimate')}</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/tutorial/record-and-align\">{t('recordAlign')}</Nav.Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n    </StyledSidebar>\r\n}","import { graphql } from \"gatsby\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Header from '../components/header'\r\nimport Sidebar from '../components/sidebar'\r\n\r\nconst StyledContainer = styled.div`\r\n    display: grid;\r\n    grid-template-areas:\r\n        'header header header header header header'\r\n        'sidebar main main main main right'\r\n        'sidebar footer footer footer footer footer';\r\n    grid-gap: 10px;\r\n`\r\nconst StyledContent = styled.div`\r\n    grid-area: main;\r\n    width: 80%;\r\n    img {\r\n        margin: 30px 0px;\r\n        display: block;\r\n        max-width: 100%;\r\n    }\r\n    h1 {\r\n        font-size: 3rem;\r\n        font-weight: 600;\r\n        margin-top: 1em;\r\n    }\r\n    h2 {\r\n        font-size: 1.4rem;\r\n        font-weight: 600;\r\n        margin-top: 1em;\r\n    }\r\n    h3 {\r\n        font-size: 1rem;\r\n        font-weight: 600;\r\n    }\r\n`\r\n\r\nexport default function Template({ data }) {\r\n    const { markdownRemark } = data // data.markdownRemark holds your post data\r\n    const { frontmatter, html } = markdownRemark\r\n\r\n    return <StyledContainer>\r\n        <Header />\r\n        <Sidebar />\r\n        <StyledContent>\r\n            <h1>{frontmatter.title}</h1>\r\n            <div style={{marginTop: '4em'}} dangerouslySetInnerHTML={{ __html: html }}/>\r\n        </StyledContent>\r\n    </StyledContainer>\r\n}\r\n\r\n\r\nexport const pageQuery = graphql`\r\n    query($slug: String!, $language: String!) {\r\n        markdownRemark(frontmatter: { slug: { eq: $slug }, lang: { eq: $language } }) {\r\n            html\r\n            frontmatter {\r\n                slug\r\n                title\r\n                lang\r\n            }\r\n        }\r\n        locales: allLocale(filter: {language: {eq: $language}}) {\r\n            edges {\r\n              node {\r\n                ns\r\n                data\r\n                language\r\n              }\r\n            }\r\n          }\r\n    }\r\n`\r\n"],"sourceRoot":""}